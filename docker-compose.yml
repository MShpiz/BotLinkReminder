services:

  db:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=tgbot
    expose:
      - "5433" # Publishes 5433 to other containers but NOT to host machine
    ports:
      - "5433:5433"
    command:
      -p 5433

  liquibase:
    image: liquibase/liquibase
    container_name: liquibase_migrations
    depends_on:
      - db
    volumes:
      - ./migrations:/changesets
    command:
      - --searchPath=/changesets
      - --changelog-file=master.xml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://db:5433/tgbot
      - --username=postgres
      - --password=postgres
      - update
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka-1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    hostname: kafka-1
    container_name: kafka-1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://localhost:9092, DOCKER://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MIN_IN_SYNC_REPLICAS: 1
    volumes:
      - ./kafka-vol:/kafka-vol

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8082:8880"
    environment:
      DYNAMIC_CONFIG_ENABLED: true
    volumes:
      - ./kui/config.yml:/etc.kafkaui/config.yaml
      - ./kui/config.yml:/etc.kafkaui/dynamic_config.yaml
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"


  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/etc/prometheus
    networks:
      - default

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
      - 4318:4318
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - default

#  scrapper:
#    container_name: scrapper
#    build:
#      context: scrapper
#      dockerfile: scrapper.Dockerfile
#    image: scrapper:latest
#    ports:
#      - 8081:8081
#    networks:
#      - default



networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16

